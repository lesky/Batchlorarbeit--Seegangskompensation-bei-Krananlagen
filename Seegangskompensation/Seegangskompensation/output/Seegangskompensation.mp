Project:      output/Seegangskompensation
Build Number: 0
Date:         Wed Aug 28 11:54:48 2013
Compiler:     ICCM8C
Version:      7.05.00


Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                             lit   0150   0246 =    582. bytes (rel,con,rom,lit)

       Addr  Global Symbol
      -----  --------------------------------
       015B  LoadConfigTBL_seegangskompensation_Bank0
       01DA  LoadConfigTBL_seegangskompensation_Bank1
       0221  __ctype
       0396  __lit_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                        func_lit   0396   0004 =      4. bytes (rel,con,rom,proclab)

       Addr  Global Symbol
      -----  --------------------------------
       0396  __func_lit_start
       039A  __func_lit_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                     psoc_config   039A   012F =    303. bytes (rel,con,rom,code)

       Addr  Global Symbol
      -----  --------------------------------
       039A  LoadConfigTBL_seegangskompensation_Ordered
       045F  _LoadConfigInit
       045F  LoadConfigInit
       0472  _LoadConfig_seegangskompensation
       0472  LoadConfig_seegangskompensation
       04C9  __psoc_config_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                     UserModules   04C9   05AB =   1451. bytes (rel,con,rom,code)

       Addr  Global Symbol
      -----  --------------------------------
       04C9  _PWM8_1_ISR
       04CA  PWM8_1_EnableInt
       04CA  _PWM8_1_EnableInt
       04CE  _PWM8_1_DisableInt
       04CE  PWM8_1_DisableInt
       04D2  PWM8_1_Start
       04D2  _PWM8_1_Start
       04D6  PWM8_1_Stop
       04D6  _PWM8_1_Stop
       04DA  _PWM8_1_WritePeriod
       04DA  PWM8_1_WritePeriod
       04DD  _PWM8_1_WritePulseWidth
       04DD  PWM8_1_WritePulseWidth
       04E0  _PWM8_1_bReadPulseWidth
       04E0  bPWM8_1_ReadPulseWidth
       04E0  _bPWM8_1_ReadPulseWidth
       04E0  PWM8_1_bReadPulseWidth
       04E3  _bPWM8_1_ReadCounter
       04E3  bPWM8_1_ReadCounter
       04E3  PWM8_1_bReadCounter
       04E3  _PWM8_1_bReadCounter
       050C  PGA_3_SetPower
       050C  _PGA_3_Start
       050C  _PGA_3_SetPower
       050C  PGA_3_Start
       051A  _PGA_3_SetGain
       051A  PGA_3_SetGain
       053C  _PGA_3_Stop
       053C  PGA_3_Stop
       0540  _PGA_2_SetPower
       0540  _PGA_2_Start
       0540  PGA_2_Start
       0540  PGA_2_SetPower
       054E  _PGA_2_SetGain
       054E  PGA_2_SetGain
       0570  _PGA_2_Stop
       0570  PGA_2_Stop
       0574  PGA_1_SetPower
       0574  _PGA_1_Start
       0574  _PGA_1_SetPower
       0574  PGA_1_Start
       0582  PGA_1_SetGain
       0582  _PGA_1_SetGain
       05A4  PGA_1_Stop
       05A4  _PGA_1_Stop
       05A8  LCD_1_PrCString
       05A8  _LCD_1_PrCString
       05BA  LCD_1_HEX_STR
       05CA  LCD_1_PrHexByte
       05CA  _LCD_1_PrHexByte
       05DD  _LCD_1_PrHexInt
       05DD  LCD_1_PrHexInt
       05E4  _LCD_1_PrString
       05E4  LCD_1_PrString
       05EE  LCD_1_WriteData
       05EE  LCD_1_Write_Data
       05EE  _LCD_1_WriteData
       05EE  _LCD_1_Write_Data
       0602  LCD_1_Control
       0602  _LCD_1_Control
       06A9  _LCD_1_Init
       06A9  _LCD_1_Start
       06A9  LCD_1_Init
       06A9  LCD_1_Start
       0715  LCD_1_ROW_OFFSET
       0719  _LCD_1_Position
       0719  LCD_1_Position
       0725  LCD_1_Delay50uTimes
       0725  _LCD_1_Delay50uTimes
       072B  LCD_1_Delay50u_Table
       0733  LCD_1_Delay50u
       0733  _LCD_1_Delay50u
       0747  LCD_1_DrawBG
       076D  _LCD_1_DrawBG
       0796  LCD_1_DrawVBG
       07C3  _LCD_1_DrawVBG
       07F3  _LCD_1_InitVBG
       07F3  LCD_1_InitVBG
       0820  LCD_1_BG_TYPE1
       0827  LCD_1_BG_TYPE2
       082E  _LCD_1_InitBG
       082E  LCD_1_InitBG
       085E  _DUALADC8_CNT1_ISR
       0861  _DUALADC8_CNT2_ISR
       0864  _DUALADC8_PWM16_ISR
       08F3  _DUALADC8_SetPower
       08F3  _DUALADC8_Start
       08F3  DUALADC8_Start
       08F3  DUALADC8_SetPower
       090D  _DUALADC8_Stop
       090D  DUALADC8_Stop
       0914  DUALADC8_GetSamples
       0914  _DUALADC8_GetSamples
       0953  DUALADC8_StopAD
       0953  _DUALADC8_StopAD
       0972  DUALADC8_fIsData
       0972  _DUALADC8_fIsData
       0972  DUALADC8_fIsDataAvailable
       0972  _DUALADC8_fIsDataAvailable
       0977  DUALADC8_cGetData1ClearFlag
       0977  _DUALADC8_cGetData1ClearFlag
       097D  DUALADC8_cGetData1
       097D  _DUALADC8_cGetData1
       0980  DUALADC8_cGetData2ClearFlag
       0980  _DUALADC8_cGetData2ClearFlag
       0986  _DUALADC8_cGetData2
       0986  DUALADC8_cGetData2
       0989  DUALADC8_ClearFlag
       0989  _DUALADC8_ClearFlag
       098D  _DUALADC8_SetCalcTime
       098D  DUALADC8_SetCalcTime
       0992  _ADCINC_ADConversion_ISR
       09FD  ADCINC_Start
       09FD  _ADCINC_Start
       0A0F  _ADCINC_SetPower
       0A0F  ADCINC_SetPower
       0A1D  ADCINC_Stop
       0A1D  _ADCINC_Stop
       0A27  ADCINC_GetSamples
       0A27  _ADCINC_GetSamples
       0A43  _ADCINC_StopADC
       0A43  ADCINC_StopADC
       0A4D  _ADCINC_fIsDataAvailable
       0A4D  ADCINC_fIsDataAvailable
       0A50  _ADCINC_wClearFlagGetData
       0A50  _ADCINC_iClearFlagGetData
       0A50  ADCINC_wClearFlagGetData
       0A50  ADCINC_iClearFlagGetData
       0A5D  _ADCINC_bClearFlagGetData
       0A5D  ADCINC_cClearFlagGetData
       0A5D  _ADCINC_cClearFlagGetData
       0A5D  ADCINC_bClearFlagGetData
       0A63  ADCINC_wGetData
       0A63  _ADCINC_wGetData
       0A63  _ADCINC_iGetData
       0A63  ADCINC_iGetData
       0A68  ADCINC_bGetData
       0A68  ADCINC_cGetData
       0A68  _ADCINC_bGetData
       0A68  _ADCINC_cGetData
       0A6B  ADCINC_fClearFlag
       0A6B  _ADCINC_fClearFlag
       0A71  ADCINC_WritePulseWidth
       0A71  _ADCINC_WritePulseWidth
       0A74  __UserModules_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                            text   0A74   098C =   2444. bytes (rel,con,rom,code)

       Addr  Global Symbol
      -----  --------------------------------
       0A74  _main
       0A74  __text_start
       0B12  _LCDansteuern
       0B43  _Dateneinlesen
       0B76  _Ausgangansteuern
       0BFC  __plcall
       0C08  _itoa
       0D85  _utoa
       0E83  _isdigit
       0EA1  _islower
       0EBF  _isspace
       0EDD  _toupper
       0F12  __csdepi
       0F2C  _csprintf
       0F6B  __cprint
       1400  __text_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
               virtual_registers   0000   0009 =      9. bytes (rel,con,ram)

       Addr  Global Symbol
      -----  --------------------------------
       0000  __rZ
       0001  __rY
       0002  __rX
       0003  __r5
       0004  __r4
       0005  __r3
       0006  __r2
       0007  __r1
       0008  __r0
       0009  __virtual_registers_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                    InterruptRAM   0009   0013 =     19. bytes (rel,con,ram)

       Addr  Global Symbol
      -----  --------------------------------
       0009  Port_1_Data_SHADE
       0009  _Port_1_Data_SHADE
       0009  NO_SHADOW
       0009  _NO_SHADOW
       000A  Port_2_Data_SHADE
       000A  _Port_2_Data_SHADE
       000B  Port_2_DriveMode_0_SHADE
       000B  _Port_2_DriveMode_0_SHADE
       000C  _Port_2_DriveMode_1_SHADE
       000C  Port_2_DriveMode_1_SHADE
       000D  DUALADC8_cCounter1U
       000E  DUALADC8_cCounter2U
       000F  DUALADC8_iResult1
       000F  _DUALADC8_iResult1
       0011  _DUALADC8_iResult2
       0011  DUALADC8_iResult2
       0013  DUALADC8_bfStatus
       0013  _DUALADC8_bfStatus
       0014  _ADCINC_iResult
       0014  ADCINC_iResult
       0018  _ADCINC_fStatus
       0018  ADCINC_fStatus
       0019  _ADCINC_bState
       0019  ADCINC_bState
       001A  ADCINC_fMode
       001A  _ADCINC_fMode
       001B  ADCINC_bNumSamples
       001B  _ADCINC_bNumSamples
       001C  __InterruptRAM_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                             bss   001C   001F =     31. bytes (rel,con,ram)

       Addr  Global Symbol
      -----  --------------------------------
       001C  _prozess
       001C  __bss_start
       003B  __bss_end

Area                               Addr   Size   Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
        seegangskompensation_RAM   003B   0002 =      2. bytes (rel,con,ram)

       Addr  Global Symbol
      -----  --------------------------------
       003B  DUALADC8_iCalcTime
       003B  _DUALADC8_iCalcTime
       003D  __seegangskompensation_RAM_end
       003D  __ramareas_end

Area                               Start  End    Decimal Bytes (Attributes)
--------------------------------   ----   ----   ------- ----- ------------
                             TOP   0000   00D7 =    215. bytes (abs,ovr,rom,code)

       Addr  Global Symbol
      -----  --------------------------------
       0068  __Start
       00D4  _bGetPowerSetting
       00D4  bGetPowerSetting

Files Linked      [ module(s) ]

./obj/boot.o	[ boot.asm ]
obj/main.o	[ main.c ]
<library>	[ pwm8_1int.asm, pwm8_1.asm, psocconfigtbl.asm, psocconfig.asm, pga_3.asm, pga_2.asm, pga_1.asm ]
[ lcd_1.asm, dualadc8int.asm, dualadc8.asm, adcincint.asm, adcinc.asm, rZ.asm, rY.asm, rX.asm, r5.asm ]
[ r4.asm, r3.asm, r2.asm, r1.asm, r0.asm, divmodu_16x16_16_util.asm, divmodu_8x8_8_util.asm, i_div16_block_util.asm ]
[ i_div8_block_util.asm, plcall.s, itoa.s, utoa.s, isdigit.s, islower.s, isspace.s, ctype.s, toupper.s ]
[ sprintf.s, _printf.s ]

Area Definitions

-blit:0x150.0x3fff
-bdata:0.0xff
-rwh:SSCParmBlk:0xf7.0xff

