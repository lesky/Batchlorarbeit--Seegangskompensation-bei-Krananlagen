;  Generated by PSoC Designer 5.4.2946
;
;
;  PSoCGPIOINT.inc
;
;  Data: 29 October, 2001
;  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
;
;  This file is generated by the Device Editor on Application Generation.
;  It contains equates that are useful in writing code relating to GPIO
;  related interrupts.
;  
;  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
;  Edits to this file will not be preserved.
;
; Port_0_0 address and mask equates
Port_0_0_Data_ADDR:	equ	0h
Port_0_0_DriveMode_0_ADDR:	equ	100h
Port_0_0_DriveMode_1_ADDR:	equ	101h
Port_0_0_DriveMode_2_ADDR:	equ	3h
Port_0_0_GlobalSelect_ADDR:	equ	2h
Port_0_0_IntCtrl_0_ADDR:	equ	102h
Port_0_0_IntCtrl_1_ADDR:	equ	103h
Port_0_0_IntEn_ADDR:	equ	1h
Port_0_0_MASK:	equ	1h
; AnalogColumn_InputMUX_3 address and mask equates
AnalogColumn_InputMUX_3_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_3_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_3_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_3_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_3_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_3_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_3_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_3_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_3_MASK:	equ	4h
; AnalogColumn_InputMUX_0 address and mask equates
AnalogColumn_InputMUX_0_Data_ADDR:	equ	0h
AnalogColumn_InputMUX_0_DriveMode_0_ADDR:	equ	100h
AnalogColumn_InputMUX_0_DriveMode_1_ADDR:	equ	101h
AnalogColumn_InputMUX_0_DriveMode_2_ADDR:	equ	3h
AnalogColumn_InputMUX_0_GlobalSelect_ADDR:	equ	2h
AnalogColumn_InputMUX_0_IntCtrl_0_ADDR:	equ	102h
AnalogColumn_InputMUX_0_IntCtrl_1_ADDR:	equ	103h
AnalogColumn_InputMUX_0_IntEn_ADDR:	equ	1h
AnalogColumn_InputMUX_0_MASK:	equ	80h
; SELBSTTESTPin address and mask equates
SELBSTTESTPin_Data_ADDR:	equ	4h
SELBSTTESTPin_DriveMode_0_ADDR:	equ	104h
SELBSTTESTPin_DriveMode_1_ADDR:	equ	105h
SELBSTTESTPin_DriveMode_2_ADDR:	equ	7h
SELBSTTESTPin_GlobalSelect_ADDR:	equ	6h
SELBSTTESTPin_IntCtrl_0_ADDR:	equ	106h
SELBSTTESTPin_IntCtrl_1_ADDR:	equ	107h
SELBSTTESTPin_IntEn_ADDR:	equ	5h
SELBSTTESTPin_MASK:	equ	2h
; SELBSTTESTPin_Data access macros
;   GetSELBSTTESTPin_Data macro, return in a
macro GetSELBSTTESTPin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 2h
endm
;   SetSELBSTTESTPin_Data macro
macro SetSELBSTTESTPin_Data
	or		[Port_1_Data_SHADE], 2h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[SELBSTTESTPin_Data_ADDR], a
endm
;   ClearSELBSTTESTPin_Data macro
macro ClearSELBSTTESTPin_Data
	and		[Port_1_Data_SHADE], ~2h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[SELBSTTESTPin_Data_ADDR], a
endm

; IN1Pin address and mask equates
IN1Pin_Data_ADDR:	equ	4h
IN1Pin_DriveMode_0_ADDR:	equ	104h
IN1Pin_DriveMode_1_ADDR:	equ	105h
IN1Pin_DriveMode_2_ADDR:	equ	7h
IN1Pin_GlobalSelect_ADDR:	equ	6h
IN1Pin_IntCtrl_0_ADDR:	equ	106h
IN1Pin_IntCtrl_1_ADDR:	equ	107h
IN1Pin_IntEn_ADDR:	equ	5h
IN1Pin_MASK:	equ	8h
; IN1Pin_Data access macros
;   GetIN1Pin_Data macro, return in a
macro GetIN1Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 8h
endm
;   SetIN1Pin_Data macro
macro SetIN1Pin_Data
	or		[Port_1_Data_SHADE], 8h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[IN1Pin_Data_ADDR], a
endm
;   ClearIN1Pin_Data macro
macro ClearIN1Pin_Data
	and		[Port_1_Data_SHADE], ~8h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[IN1Pin_Data_ADDR], a
endm

; IN2Pin address and mask equates
IN2Pin_Data_ADDR:	equ	4h
IN2Pin_DriveMode_0_ADDR:	equ	104h
IN2Pin_DriveMode_1_ADDR:	equ	105h
IN2Pin_DriveMode_2_ADDR:	equ	7h
IN2Pin_GlobalSelect_ADDR:	equ	6h
IN2Pin_IntCtrl_0_ADDR:	equ	106h
IN2Pin_IntCtrl_1_ADDR:	equ	107h
IN2Pin_IntEn_ADDR:	equ	5h
IN2Pin_MASK:	equ	20h
; IN2Pin_Data access macros
;   GetIN2Pin_Data macro, return in a
macro GetIN2Pin_Data
	mov		a,[Port_1_Data_SHADE]
	and		a, 20h
endm
;   SetIN2Pin_Data macro
macro SetIN2Pin_Data
	or		[Port_1_Data_SHADE], 20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[IN2Pin_Data_ADDR], a
endm
;   ClearIN2Pin_Data macro
macro ClearIN2Pin_Data
	and		[Port_1_Data_SHADE], ~20h
	mov		a, [Port_1_Data_SHADE]
	mov		reg[IN2Pin_Data_ADDR], a
endm

; LCD_1D4 address and mask equates
LCD_1D4_Data_ADDR:	equ	8h
LCD_1D4_DriveMode_0_ADDR:	equ	108h
LCD_1D4_DriveMode_1_ADDR:	equ	109h
LCD_1D4_DriveMode_2_ADDR:	equ	bh
LCD_1D4_GlobalSelect_ADDR:	equ	ah
LCD_1D4_IntCtrl_0_ADDR:	equ	10ah
LCD_1D4_IntCtrl_1_ADDR:	equ	10bh
LCD_1D4_IntEn_ADDR:	equ	9h
LCD_1D4_MASK:	equ	1h
; LCD_1D4_Data access macros
;   GetLCD_1D4_Data macro, return in a
macro GetLCD_1D4_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 1h
endm
;   SetLCD_1D4_Data macro
macro SetLCD_1D4_Data
	or		[Port_2_Data_SHADE], 1h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm
;   ClearLCD_1D4_Data macro
macro ClearLCD_1D4_Data
	and		[Port_2_Data_SHADE], ~1h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm

; LCD_1D4_DriveMode_0 access macros
;   GetLCD_1D4_DriveMode_0 macro, return in a
macro GetLCD_1D4_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 1h
endm
;   SetLCD_1D4_DriveMode_0 macro
macro SetLCD_1D4_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 1h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm
;   ClearLCD_1D4_DriveMode_0 macro
macro ClearLCD_1D4_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~1h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm

; LCD_1D4_DriveMode_1 access macros
;   GetLCD_1D4_DriveMode_1 macro, return in a
macro GetLCD_1D4_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 1h
endm
;   SetLCD_1D4_DriveMode_1 macro
macro SetLCD_1D4_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 1h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm
;   ClearLCD_1D4_DriveMode_1 macro
macro ClearLCD_1D4_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~1h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D4_Data_ADDR], a
endm

; LCD_1D5 address and mask equates
LCD_1D5_Data_ADDR:	equ	8h
LCD_1D5_DriveMode_0_ADDR:	equ	108h
LCD_1D5_DriveMode_1_ADDR:	equ	109h
LCD_1D5_DriveMode_2_ADDR:	equ	bh
LCD_1D5_GlobalSelect_ADDR:	equ	ah
LCD_1D5_IntCtrl_0_ADDR:	equ	10ah
LCD_1D5_IntCtrl_1_ADDR:	equ	10bh
LCD_1D5_IntEn_ADDR:	equ	9h
LCD_1D5_MASK:	equ	2h
; LCD_1D5_Data access macros
;   GetLCD_1D5_Data macro, return in a
macro GetLCD_1D5_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 2h
endm
;   SetLCD_1D5_Data macro
macro SetLCD_1D5_Data
	or		[Port_2_Data_SHADE], 2h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm
;   ClearLCD_1D5_Data macro
macro ClearLCD_1D5_Data
	and		[Port_2_Data_SHADE], ~2h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm

; LCD_1D5_DriveMode_0 access macros
;   GetLCD_1D5_DriveMode_0 macro, return in a
macro GetLCD_1D5_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 2h
endm
;   SetLCD_1D5_DriveMode_0 macro
macro SetLCD_1D5_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 2h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm
;   ClearLCD_1D5_DriveMode_0 macro
macro ClearLCD_1D5_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~2h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm

; LCD_1D5_DriveMode_1 access macros
;   GetLCD_1D5_DriveMode_1 macro, return in a
macro GetLCD_1D5_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 2h
endm
;   SetLCD_1D5_DriveMode_1 macro
macro SetLCD_1D5_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 2h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm
;   ClearLCD_1D5_DriveMode_1 macro
macro ClearLCD_1D5_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~2h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D5_Data_ADDR], a
endm

; LCD_1D6 address and mask equates
LCD_1D6_Data_ADDR:	equ	8h
LCD_1D6_DriveMode_0_ADDR:	equ	108h
LCD_1D6_DriveMode_1_ADDR:	equ	109h
LCD_1D6_DriveMode_2_ADDR:	equ	bh
LCD_1D6_GlobalSelect_ADDR:	equ	ah
LCD_1D6_IntCtrl_0_ADDR:	equ	10ah
LCD_1D6_IntCtrl_1_ADDR:	equ	10bh
LCD_1D6_IntEn_ADDR:	equ	9h
LCD_1D6_MASK:	equ	4h
; LCD_1D6_Data access macros
;   GetLCD_1D6_Data macro, return in a
macro GetLCD_1D6_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 4h
endm
;   SetLCD_1D6_Data macro
macro SetLCD_1D6_Data
	or		[Port_2_Data_SHADE], 4h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm
;   ClearLCD_1D6_Data macro
macro ClearLCD_1D6_Data
	and		[Port_2_Data_SHADE], ~4h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm

; LCD_1D6_DriveMode_0 access macros
;   GetLCD_1D6_DriveMode_0 macro, return in a
macro GetLCD_1D6_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 4h
endm
;   SetLCD_1D6_DriveMode_0 macro
macro SetLCD_1D6_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 4h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm
;   ClearLCD_1D6_DriveMode_0 macro
macro ClearLCD_1D6_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~4h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm

; LCD_1D6_DriveMode_1 access macros
;   GetLCD_1D6_DriveMode_1 macro, return in a
macro GetLCD_1D6_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 4h
endm
;   SetLCD_1D6_DriveMode_1 macro
macro SetLCD_1D6_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 4h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm
;   ClearLCD_1D6_DriveMode_1 macro
macro ClearLCD_1D6_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~4h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D6_Data_ADDR], a
endm

; LCD_1D7 address and mask equates
LCD_1D7_Data_ADDR:	equ	8h
LCD_1D7_DriveMode_0_ADDR:	equ	108h
LCD_1D7_DriveMode_1_ADDR:	equ	109h
LCD_1D7_DriveMode_2_ADDR:	equ	bh
LCD_1D7_GlobalSelect_ADDR:	equ	ah
LCD_1D7_IntCtrl_0_ADDR:	equ	10ah
LCD_1D7_IntCtrl_1_ADDR:	equ	10bh
LCD_1D7_IntEn_ADDR:	equ	9h
LCD_1D7_MASK:	equ	8h
; LCD_1D7_Data access macros
;   GetLCD_1D7_Data macro, return in a
macro GetLCD_1D7_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 8h
endm
;   SetLCD_1D7_Data macro
macro SetLCD_1D7_Data
	or		[Port_2_Data_SHADE], 8h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm
;   ClearLCD_1D7_Data macro
macro ClearLCD_1D7_Data
	and		[Port_2_Data_SHADE], ~8h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm

; LCD_1D7_DriveMode_0 access macros
;   GetLCD_1D7_DriveMode_0 macro, return in a
macro GetLCD_1D7_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 8h
endm
;   SetLCD_1D7_DriveMode_0 macro
macro SetLCD_1D7_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 8h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm
;   ClearLCD_1D7_DriveMode_0 macro
macro ClearLCD_1D7_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~8h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm

; LCD_1D7_DriveMode_1 access macros
;   GetLCD_1D7_DriveMode_1 macro, return in a
macro GetLCD_1D7_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 8h
endm
;   SetLCD_1D7_DriveMode_1 macro
macro SetLCD_1D7_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 8h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm
;   ClearLCD_1D7_DriveMode_1 macro
macro ClearLCD_1D7_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~8h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1D7_Data_ADDR], a
endm

; LCD_1E address and mask equates
LCD_1E_Data_ADDR:	equ	8h
LCD_1E_DriveMode_0_ADDR:	equ	108h
LCD_1E_DriveMode_1_ADDR:	equ	109h
LCD_1E_DriveMode_2_ADDR:	equ	bh
LCD_1E_GlobalSelect_ADDR:	equ	ah
LCD_1E_IntCtrl_0_ADDR:	equ	10ah
LCD_1E_IntCtrl_1_ADDR:	equ	10bh
LCD_1E_IntEn_ADDR:	equ	9h
LCD_1E_MASK:	equ	10h
; LCD_1E_Data access macros
;   GetLCD_1E_Data macro, return in a
macro GetLCD_1E_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 10h
endm
;   SetLCD_1E_Data macro
macro SetLCD_1E_Data
	or		[Port_2_Data_SHADE], 10h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm
;   ClearLCD_1E_Data macro
macro ClearLCD_1E_Data
	and		[Port_2_Data_SHADE], ~10h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm

; LCD_1E_DriveMode_0 access macros
;   GetLCD_1E_DriveMode_0 macro, return in a
macro GetLCD_1E_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 10h
endm
;   SetLCD_1E_DriveMode_0 macro
macro SetLCD_1E_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 10h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm
;   ClearLCD_1E_DriveMode_0 macro
macro ClearLCD_1E_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~10h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm

; LCD_1E_DriveMode_1 access macros
;   GetLCD_1E_DriveMode_1 macro, return in a
macro GetLCD_1E_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 10h
endm
;   SetLCD_1E_DriveMode_1 macro
macro SetLCD_1E_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 10h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm
;   ClearLCD_1E_DriveMode_1 macro
macro ClearLCD_1E_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~10h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1E_Data_ADDR], a
endm

; LCD_1RS address and mask equates
LCD_1RS_Data_ADDR:	equ	8h
LCD_1RS_DriveMode_0_ADDR:	equ	108h
LCD_1RS_DriveMode_1_ADDR:	equ	109h
LCD_1RS_DriveMode_2_ADDR:	equ	bh
LCD_1RS_GlobalSelect_ADDR:	equ	ah
LCD_1RS_IntCtrl_0_ADDR:	equ	10ah
LCD_1RS_IntCtrl_1_ADDR:	equ	10bh
LCD_1RS_IntEn_ADDR:	equ	9h
LCD_1RS_MASK:	equ	20h
; LCD_1RS_Data access macros
;   GetLCD_1RS_Data macro, return in a
macro GetLCD_1RS_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 20h
endm
;   SetLCD_1RS_Data macro
macro SetLCD_1RS_Data
	or		[Port_2_Data_SHADE], 20h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm
;   ClearLCD_1RS_Data macro
macro ClearLCD_1RS_Data
	and		[Port_2_Data_SHADE], ~20h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm

; LCD_1RS_DriveMode_0 access macros
;   GetLCD_1RS_DriveMode_0 macro, return in a
macro GetLCD_1RS_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 20h
endm
;   SetLCD_1RS_DriveMode_0 macro
macro SetLCD_1RS_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 20h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm
;   ClearLCD_1RS_DriveMode_0 macro
macro ClearLCD_1RS_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~20h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm

; LCD_1RS_DriveMode_1 access macros
;   GetLCD_1RS_DriveMode_1 macro, return in a
macro GetLCD_1RS_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 20h
endm
;   SetLCD_1RS_DriveMode_1 macro
macro SetLCD_1RS_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 20h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm
;   ClearLCD_1RS_DriveMode_1 macro
macro ClearLCD_1RS_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~20h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1RS_Data_ADDR], a
endm

; LCD_1RW address and mask equates
LCD_1RW_Data_ADDR:	equ	8h
LCD_1RW_DriveMode_0_ADDR:	equ	108h
LCD_1RW_DriveMode_1_ADDR:	equ	109h
LCD_1RW_DriveMode_2_ADDR:	equ	bh
LCD_1RW_GlobalSelect_ADDR:	equ	ah
LCD_1RW_IntCtrl_0_ADDR:	equ	10ah
LCD_1RW_IntCtrl_1_ADDR:	equ	10bh
LCD_1RW_IntEn_ADDR:	equ	9h
LCD_1RW_MASK:	equ	40h
; LCD_1RW_Data access macros
;   GetLCD_1RW_Data macro, return in a
macro GetLCD_1RW_Data
	mov		a,[Port_2_Data_SHADE]
	and		a, 40h
endm
;   SetLCD_1RW_Data macro
macro SetLCD_1RW_Data
	or		[Port_2_Data_SHADE], 40h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm
;   ClearLCD_1RW_Data macro
macro ClearLCD_1RW_Data
	and		[Port_2_Data_SHADE], ~40h
	mov		a, [Port_2_Data_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm

; LCD_1RW_DriveMode_0 access macros
;   GetLCD_1RW_DriveMode_0 macro, return in a
macro GetLCD_1RW_DriveMode_0
	mov		a,[Port_2_DriveMode_0_SHADE]
	and		a, 40h
endm
;   SetLCD_1RW_DriveMode_0 macro
macro SetLCD_1RW_DriveMode_0
	or		[Port_2_DriveMode_0_SHADE], 40h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm
;   ClearLCD_1RW_DriveMode_0 macro
macro ClearLCD_1RW_DriveMode_0
	and		[Port_2_DriveMode_0_SHADE], ~40h
	mov		a, [Port_2_DriveMode_0_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm

; LCD_1RW_DriveMode_1 access macros
;   GetLCD_1RW_DriveMode_1 macro, return in a
macro GetLCD_1RW_DriveMode_1
	mov		a,[Port_2_DriveMode_1_SHADE]
	and		a, 40h
endm
;   SetLCD_1RW_DriveMode_1 macro
macro SetLCD_1RW_DriveMode_1
	or		[Port_2_DriveMode_1_SHADE], 40h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm
;   ClearLCD_1RW_DriveMode_1 macro
macro ClearLCD_1RW_DriveMode_1
	and		[Port_2_DriveMode_1_SHADE], ~40h
	mov		a, [Port_2_DriveMode_1_SHADE]
	mov		reg[LCD_1RW_Data_ADDR], a
endm

