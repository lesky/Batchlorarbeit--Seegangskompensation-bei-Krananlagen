/******************************************************************************
*  Generated by PSoC Designer 5.4.2946
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// Port_0_0 address and mask defines
#pragma	ioport	Port_0_0_Data_ADDR:	0x0
BYTE			Port_0_0_Data_ADDR;
#pragma	ioport	Port_0_0_DriveMode_0_ADDR:	0x100
BYTE			Port_0_0_DriveMode_0_ADDR;
#pragma	ioport	Port_0_0_DriveMode_1_ADDR:	0x101
BYTE			Port_0_0_DriveMode_1_ADDR;
#pragma	ioport	Port_0_0_DriveMode_2_ADDR:	0x3
BYTE			Port_0_0_DriveMode_2_ADDR;
#pragma	ioport	Port_0_0_GlobalSelect_ADDR:	0x2
BYTE			Port_0_0_GlobalSelect_ADDR;
#pragma	ioport	Port_0_0_IntCtrl_0_ADDR:	0x102
BYTE			Port_0_0_IntCtrl_0_ADDR;
#pragma	ioport	Port_0_0_IntCtrl_1_ADDR:	0x103
BYTE			Port_0_0_IntCtrl_1_ADDR;
#pragma	ioport	Port_0_0_IntEn_ADDR:	0x1
BYTE			Port_0_0_IntEn_ADDR;
#define Port_0_0_MASK 0x1
// AnalogColumn_InputMUX_3 address and mask defines
#pragma	ioport	AnalogColumn_InputMUX_3_Data_ADDR:	0x0
BYTE			AnalogColumn_InputMUX_3_Data_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_0_ADDR:	0x100
BYTE			AnalogColumn_InputMUX_3_DriveMode_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_1_ADDR:	0x101
BYTE			AnalogColumn_InputMUX_3_DriveMode_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_DriveMode_2_ADDR:	0x3
BYTE			AnalogColumn_InputMUX_3_DriveMode_2_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_GlobalSelect_ADDR:	0x2
BYTE			AnalogColumn_InputMUX_3_GlobalSelect_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntCtrl_0_ADDR:	0x102
BYTE			AnalogColumn_InputMUX_3_IntCtrl_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntCtrl_1_ADDR:	0x103
BYTE			AnalogColumn_InputMUX_3_IntCtrl_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_3_IntEn_ADDR:	0x1
BYTE			AnalogColumn_InputMUX_3_IntEn_ADDR;
#define AnalogColumn_InputMUX_3_MASK 0x4
// AnalogColumn_InputMUX_0 address and mask defines
#pragma	ioport	AnalogColumn_InputMUX_0_Data_ADDR:	0x0
BYTE			AnalogColumn_InputMUX_0_Data_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_DriveMode_0_ADDR:	0x100
BYTE			AnalogColumn_InputMUX_0_DriveMode_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_DriveMode_1_ADDR:	0x101
BYTE			AnalogColumn_InputMUX_0_DriveMode_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_DriveMode_2_ADDR:	0x3
BYTE			AnalogColumn_InputMUX_0_DriveMode_2_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_GlobalSelect_ADDR:	0x2
BYTE			AnalogColumn_InputMUX_0_GlobalSelect_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_IntCtrl_0_ADDR:	0x102
BYTE			AnalogColumn_InputMUX_0_IntCtrl_0_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_IntCtrl_1_ADDR:	0x103
BYTE			AnalogColumn_InputMUX_0_IntCtrl_1_ADDR;
#pragma	ioport	AnalogColumn_InputMUX_0_IntEn_ADDR:	0x1
BYTE			AnalogColumn_InputMUX_0_IntEn_ADDR;
#define AnalogColumn_InputMUX_0_MASK 0x80
// IN1Pin address and mask defines
#pragma	ioport	IN1Pin_Data_ADDR:	0x4
BYTE			IN1Pin_Data_ADDR;
#pragma	ioport	IN1Pin_DriveMode_0_ADDR:	0x104
BYTE			IN1Pin_DriveMode_0_ADDR;
#pragma	ioport	IN1Pin_DriveMode_1_ADDR:	0x105
BYTE			IN1Pin_DriveMode_1_ADDR;
#pragma	ioport	IN1Pin_DriveMode_2_ADDR:	0x7
BYTE			IN1Pin_DriveMode_2_ADDR;
#pragma	ioport	IN1Pin_GlobalSelect_ADDR:	0x6
BYTE			IN1Pin_GlobalSelect_ADDR;
#pragma	ioport	IN1Pin_IntCtrl_0_ADDR:	0x106
BYTE			IN1Pin_IntCtrl_0_ADDR;
#pragma	ioport	IN1Pin_IntCtrl_1_ADDR:	0x107
BYTE			IN1Pin_IntCtrl_1_ADDR;
#pragma	ioport	IN1Pin_IntEn_ADDR:	0x5
BYTE			IN1Pin_IntEn_ADDR;
#define IN1Pin_MASK 0x8
// IN1Pin Shadow defines
//   IN1Pin_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define IN1Pin_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// IN2Pin address and mask defines
#pragma	ioport	IN2Pin_Data_ADDR:	0x4
BYTE			IN2Pin_Data_ADDR;
#pragma	ioport	IN2Pin_DriveMode_0_ADDR:	0x104
BYTE			IN2Pin_DriveMode_0_ADDR;
#pragma	ioport	IN2Pin_DriveMode_1_ADDR:	0x105
BYTE			IN2Pin_DriveMode_1_ADDR;
#pragma	ioport	IN2Pin_DriveMode_2_ADDR:	0x7
BYTE			IN2Pin_DriveMode_2_ADDR;
#pragma	ioport	IN2Pin_GlobalSelect_ADDR:	0x6
BYTE			IN2Pin_GlobalSelect_ADDR;
#pragma	ioport	IN2Pin_IntCtrl_0_ADDR:	0x106
BYTE			IN2Pin_IntCtrl_0_ADDR;
#pragma	ioport	IN2Pin_IntCtrl_1_ADDR:	0x107
BYTE			IN2Pin_IntCtrl_1_ADDR;
#pragma	ioport	IN2Pin_IntEn_ADDR:	0x5
BYTE			IN2Pin_IntEn_ADDR;
#define IN2Pin_MASK 0x20
// IN2Pin Shadow defines
//   IN2Pin_DataShadow define
extern BYTE Port_1_Data_SHADE;
#define IN2Pin_DataShadow (*(unsigned char*)&Port_1_Data_SHADE)
// LCD_1D4 address and mask defines
#pragma	ioport	LCD_1D4_Data_ADDR:	0x8
BYTE			LCD_1D4_Data_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D4_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D4_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D4_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D4_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D4_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D4_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D4_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D4_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D4_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D4_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D4_IntEn_ADDR:	0x9
BYTE			LCD_1D4_IntEn_ADDR;
#define LCD_1D4_MASK 0x1
// LCD_1D4 Shadow defines
//   LCD_1D4_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D4_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D4_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D4_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D4_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D4_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D5 address and mask defines
#pragma	ioport	LCD_1D5_Data_ADDR:	0x8
BYTE			LCD_1D5_Data_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D5_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D5_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D5_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D5_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D5_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D5_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D5_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D5_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D5_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D5_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D5_IntEn_ADDR:	0x9
BYTE			LCD_1D5_IntEn_ADDR;
#define LCD_1D5_MASK 0x2
// LCD_1D5 Shadow defines
//   LCD_1D5_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D5_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D5_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D5_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D5_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D5_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D6 address and mask defines
#pragma	ioport	LCD_1D6_Data_ADDR:	0x8
BYTE			LCD_1D6_Data_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D6_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D6_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D6_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D6_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D6_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D6_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D6_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D6_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D6_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D6_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D6_IntEn_ADDR:	0x9
BYTE			LCD_1D6_IntEn_ADDR;
#define LCD_1D6_MASK 0x4
// LCD_1D6 Shadow defines
//   LCD_1D6_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D6_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D6_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D6_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D6_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D6_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1D7 address and mask defines
#pragma	ioport	LCD_1D7_Data_ADDR:	0x8
BYTE			LCD_1D7_Data_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_0_ADDR:	0x108
BYTE			LCD_1D7_DriveMode_0_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_1_ADDR:	0x109
BYTE			LCD_1D7_DriveMode_1_ADDR;
#pragma	ioport	LCD_1D7_DriveMode_2_ADDR:	0xb
BYTE			LCD_1D7_DriveMode_2_ADDR;
#pragma	ioport	LCD_1D7_GlobalSelect_ADDR:	0xa
BYTE			LCD_1D7_GlobalSelect_ADDR;
#pragma	ioport	LCD_1D7_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1D7_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1D7_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1D7_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1D7_IntEn_ADDR:	0x9
BYTE			LCD_1D7_IntEn_ADDR;
#define LCD_1D7_MASK 0x8
// LCD_1D7 Shadow defines
//   LCD_1D7_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1D7_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1D7_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1D7_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1D7_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1D7_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1E address and mask defines
#pragma	ioport	LCD_1E_Data_ADDR:	0x8
BYTE			LCD_1E_Data_ADDR;
#pragma	ioport	LCD_1E_DriveMode_0_ADDR:	0x108
BYTE			LCD_1E_DriveMode_0_ADDR;
#pragma	ioport	LCD_1E_DriveMode_1_ADDR:	0x109
BYTE			LCD_1E_DriveMode_1_ADDR;
#pragma	ioport	LCD_1E_DriveMode_2_ADDR:	0xb
BYTE			LCD_1E_DriveMode_2_ADDR;
#pragma	ioport	LCD_1E_GlobalSelect_ADDR:	0xa
BYTE			LCD_1E_GlobalSelect_ADDR;
#pragma	ioport	LCD_1E_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1E_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1E_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1E_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1E_IntEn_ADDR:	0x9
BYTE			LCD_1E_IntEn_ADDR;
#define LCD_1E_MASK 0x10
// LCD_1E Shadow defines
//   LCD_1E_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1E_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1E_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1E_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1E_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1E_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1RS address and mask defines
#pragma	ioport	LCD_1RS_Data_ADDR:	0x8
BYTE			LCD_1RS_Data_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_0_ADDR:	0x108
BYTE			LCD_1RS_DriveMode_0_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_1_ADDR:	0x109
BYTE			LCD_1RS_DriveMode_1_ADDR;
#pragma	ioport	LCD_1RS_DriveMode_2_ADDR:	0xb
BYTE			LCD_1RS_DriveMode_2_ADDR;
#pragma	ioport	LCD_1RS_GlobalSelect_ADDR:	0xa
BYTE			LCD_1RS_GlobalSelect_ADDR;
#pragma	ioport	LCD_1RS_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1RS_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1RS_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1RS_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1RS_IntEn_ADDR:	0x9
BYTE			LCD_1RS_IntEn_ADDR;
#define LCD_1RS_MASK 0x20
// LCD_1RS Shadow defines
//   LCD_1RS_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1RS_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1RS_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1RS_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1RS_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1RS_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCD_1RW address and mask defines
#pragma	ioport	LCD_1RW_Data_ADDR:	0x8
BYTE			LCD_1RW_Data_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_0_ADDR:	0x108
BYTE			LCD_1RW_DriveMode_0_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_1_ADDR:	0x109
BYTE			LCD_1RW_DriveMode_1_ADDR;
#pragma	ioport	LCD_1RW_DriveMode_2_ADDR:	0xb
BYTE			LCD_1RW_DriveMode_2_ADDR;
#pragma	ioport	LCD_1RW_GlobalSelect_ADDR:	0xa
BYTE			LCD_1RW_GlobalSelect_ADDR;
#pragma	ioport	LCD_1RW_IntCtrl_0_ADDR:	0x10a
BYTE			LCD_1RW_IntCtrl_0_ADDR;
#pragma	ioport	LCD_1RW_IntCtrl_1_ADDR:	0x10b
BYTE			LCD_1RW_IntCtrl_1_ADDR;
#pragma	ioport	LCD_1RW_IntEn_ADDR:	0x9
BYTE			LCD_1RW_IntEn_ADDR;
#define LCD_1RW_MASK 0x40
// LCD_1RW Shadow defines
//   LCD_1RW_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCD_1RW_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCD_1RW_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCD_1RW_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCD_1RW_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCD_1RW_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
