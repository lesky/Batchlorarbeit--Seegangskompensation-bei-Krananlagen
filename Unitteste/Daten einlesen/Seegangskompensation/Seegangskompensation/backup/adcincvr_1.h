//*****************************************************************************
//*****************************************************************************
//  FILENAME:  ADCINCVR_1.h
//  Version: 4.00, Updated on 2013/5/19 at 10:39:58
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION:  ADCINCVR User Module C Language interface file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef ADCINCVR_1_INCLUDE
#define ADCINCVR_1_INCLUDE

#include <m8C.h>

//-------------------------------------------------
// Defines for ADCINCVR_1 API's.
//-------------------------------------------------

// Power Setting Constants
#define ADCINCVR_1_OFF            0
#define ADCINCVR_1_LOWPOWER       1
#define ADCINCVR_1_MEDPOWER       2
#define ADCINCVR_1_HIGHPOWER      3

// Function Fastcall Pragmas
#pragma fastcall16 ADCINCVR_1_Start
#pragma fastcall16 ADCINCVR_1_SetPower
#pragma fastcall16 ADCINCVR_1_GetSamples
#pragma fastcall16 ADCINCVR_1_StopAD
#pragma fastcall16 ADCINCVR_1_Stop
#pragma fastcall16 ADCINCVR_1_fIsData
#pragma fastcall16 ADCINCVR_1_fIsDataAvailable
#pragma fastcall16 ADCINCVR_1_iGetData
#pragma fastcall16 ADCINCVR_1_iGetDataClearFlag
#pragma fastcall16 ADCINCVR_1_ClearFlag
#pragma fastcall16 ADCINCVR_1_SetResolution

//-------------------------------------------------
// Prototypes of the ADCINCVR_1 API.
//-------------------------------------------------

extern void ADCINCVR_1_Start(BYTE bPower);
extern void ADCINCVR_1_SetPower(BYTE bPower);
extern void ADCINCVR_1_GetSamples(BYTE bNumSamples);
extern void ADCINCVR_1_StopAD(void);
extern void ADCINCVR_1_Stop(void);
extern CHAR ADCINCVR_1_fIsData(void);
extern CHAR ADCINCVR_1_fIsDataAvailable(void);
extern INT  ADCINCVR_1_iGetData(void);
extern INT  ADCINCVR_1_iGetDataClearFlag(void);
extern void ADCINCVR_1_ClearFlag(void);

extern void ADCINCVR_1_SetResolution(BYTE bResolution);

#define ADCINCVR_1_bNUMBITS  0x0a

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

// Integrator Block Register Definitions
#pragma ioport  ADCINCVR_1_bfAtoDcr0:   0x084
BYTE            ADCINCVR_1_bfAtoDcr0;
#pragma ioport  ADCINCVR_1_bfAtoDcr1:   0x085
BYTE            ADCINCVR_1_bfAtoDcr1;
#pragma ioport  ADCINCVR_1_bfAtoDcr2:   0x086
BYTE            ADCINCVR_1_bfAtoDcr2;
#pragma ioport  ADCINCVR_1_bfAtoDcr3:   0x087
BYTE            ADCINCVR_1_bfAtoDcr3;

// Counter Block Register Definitions
#pragma ioport  ADCINCVR_1_fCounterFN:  0x12c
BYTE            ADCINCVR_1_fCounterFN;
#pragma ioport  ADCINCVR_1_fCounterSL:  0x12d
BYTE            ADCINCVR_1_fCounterSL;
#pragma ioport  ADCINCVR_1_fCounterOS:  0x12e
BYTE            ADCINCVR_1_fCounterOS;
#pragma ioport  ADCINCVR_1_bCount:  0x02c
BYTE            ADCINCVR_1_bCount;
#pragma ioport  ADCINCVR_1_bPeriod: 0x02d
BYTE            ADCINCVR_1_bPeriod;
#pragma ioport  ADCINCVR_1_bCompare:    0x02e
BYTE            ADCINCVR_1_bCompare;
#pragma ioport  ADCINCVR_1_bCounter_CR0:    0x02f
BYTE            ADCINCVR_1_bCounter_CR0;


// PWM16 Block Register Definitions
#pragma ioport  ADCINCVR_1_bfPWM_LSB_FN:    0x130
BYTE            ADCINCVR_1_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_1_bfPWM_MSB_FN:    0x134
BYTE            ADCINCVR_1_bfPWM_MSB_FN;
#pragma ioport  ADCINCVR_1_fPWM_LSB_CR0:    0x033
BYTE            ADCINCVR_1_fPWM_LSB_CR0;
#pragma ioport  ADCINCVR_1_fPWM_MSB_CR0:    0x037
BYTE            ADCINCVR_1_fPWM_MSB_CR0;
#pragma ioport  ADCINCVR_1_bPWM_Count_MSB:  0x034
BYTE            ADCINCVR_1_bPWM_Count_MSB;
#pragma ioport  ADCINCVR_1_bPWM_Count_LSB:  0x030
BYTE            ADCINCVR_1_bPWM_Count_LSB;
#pragma ioport  ADCINCVR_1_bPWM_Period_MSB: 0x035
BYTE            ADCINCVR_1_bPWM_Period_MSB;
#pragma ioport  ADCINCVR_1_bPWM_Period_LSB: 0x031
BYTE            ADCINCVR_1_bPWM_Period_LSB;
#pragma ioport  ADCINCVR_1_bPWM_IntTime_MSB:    0x036
BYTE            ADCINCVR_1_bPWM_IntTime_MSB;
#pragma ioport  ADCINCVR_1_bPWM_IntTime_LSB:    0x032
BYTE            ADCINCVR_1_bPWM_IntTime_LSB;
#pragma ioport  ADCINCVR_1_bfPWM_LSB_FN:    0x130
BYTE            ADCINCVR_1_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_1_bfPWM_MSB_FN:    0x134
BYTE            ADCINCVR_1_bfPWM_MSB_FN;

#endif
// end of file ADCINCVR_1.h
